// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using visual_studio_code_courses_authors.Data;

namespace visualstudiocodecoursesauthors.Migrations
{
    [DbContext(typeof(CourseDbContext))]
    partial class AuthorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("visual_studio_code_courses_authors.Models.Course.Author", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("created")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("visual_studio_code_courses_authors.Models.Course.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("author_id");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("created")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("length")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("watchHref")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("author_id");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("visual_studio_code_courses_authors.Models.Course.Course", b =>
                {
                    b.HasOne("visual_studio_code_courses_authors.Models.Course.Author", "author")
                        .WithMany()
                        .HasForeignKey("author_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
